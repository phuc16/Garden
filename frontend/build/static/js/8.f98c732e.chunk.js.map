{"version":3,"sources":["app/control-scheduler/schedule.js"],"names":["TimeSetting","props","state","reload","Date","scheduled","settingDevice","axios","get","process","then","res","temp","data","setState","console","log","handleDeleteSchedule","e","index","target","value","delete","deviceInSchedule","slice","catch","err","handleTimeStart","parseInt","className","deviceInSetting","handleTimeEnd","handleSetSchedule","device_id","post","id_device","time_start","time_end","status","i","this","length","push","replace","setting","style","backgroundColor","border","color","onClick","type","onChange","step","defaultActiveKey","id","eventKey","title","keyField","columns","dataField","text","Component"],"mappings":"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","file":"static/js/8.f98c732e.chunk.js","sourcesContent":["import { Tabs, Tab, Button } from \"react-bootstrap\"\r\nimport BootstrapTable from \"react-bootstrap-table-next\"\r\nimport React, { Component } from 'react';\r\nimport './schedule.css'\r\n// import TimePicker from 'react-bootstrap-time-picker';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nclass TimeSetting extends Component {\r\n    \r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        reload: new Date(),\r\n        scheduled: [], \r\n        settingDevice: [],\r\n        // time_start: [],\r\n        // time_end: []\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      axios.get(process.env.REACT_APP_SERVER + `/schedule?startDay=2000-01-01&endDay=2023-01-01`)\r\n        .then(res => {\r\n          const temp = res.data; \r\n          this.setState({ scheduled : temp });\r\n          console.log(this.state.scheduled)\r\n        })\r\n\r\n      axios.get(process.env.REACT_APP_SERVER + `/device`)\r\n        .then(res => {\r\n          const temp = res.data; \r\n          this.setState({ settingDevice : temp });\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n      const handleDeleteSchedule = (e) => {\r\n        let index = e.target.value\r\n        axios.delete(process.env.REACT_APP_SERVER + `/schedule/${deviceInSchedule[e.target.value]['id']}`)\r\n        .then(res => {\r\n          console.log(res)\r\n\r\n          this.setState({ scheduled : [\r\n            ...this.state.scheduled.slice(0, index), \r\n            ...this.state.scheduled.slice(index+1)\r\n          ]})\r\n\r\n          \r\n        })\r\n        .catch(err =>{\r\n          console.log(err)\r\n        })\r\n      }\r\n\r\n      const handleTimeStart = e => {\r\n        let index = parseInt(e.target.className)\r\n        console.log(typeof(e.target.value))\r\n        deviceInSetting[index]['time_start'] = e.target.value\r\n      }\r\n\r\n      const handleTimeEnd = e => {\r\n        let index = parseInt(e.target.className)\r\n        deviceInSetting[index]['time_end'] = e.target.value\r\n      }\r\n\r\n      const handleSetSchedule = (e) => {\r\n        let index = e.target.value\r\n        let device_id = deviceInSetting[index]['id']\r\n\r\n        axios.post(process.env.REACT_APP_SERVER + `/schedule`, {\r\n          id_device: device_id,\r\n          time_start: deviceInSetting[index]['time_start'],\r\n          time_end: deviceInSetting[index]['time_end'],\r\n          status: 0\r\n        })\r\n        \r\n      }\r\n\r\n      const deviceInSchedule = [\r\n      ];\r\n\r\n\r\n      const deviceInSetting = []\r\n\r\n      for (let i = 0; i < this.state.scheduled.length ; i++){\r\n        deviceInSchedule.push({...this.state.scheduled[i],  \r\n        time_start: this.state.scheduled[i]['time_start'].replace('T', ', ').replace('.000Z', '') ,\r\n        time_end: this.state.scheduled[i]['time_end'].replace('T', ', ').replace('.000Z', '') ,\r\n        status: this.state.scheduled[i]['status'] == 0 ? 'Chưa thực thi' \r\n        : (this.state.scheduled[i]['status'] == 1? 'Đang thực hiện' : \r\n        ((this.state.scheduled[i]['status'] == 2? 'Hoàn thành' : \r\n        (this.state.scheduled[i]['status'] == 3? 'Time Out' : 'Task LTT')))), \r\n        setting:  this.state.scheduled[i]['status'] != 2 ?<Button style={{backgroundColor: 'white', border: '1px solid red', color: 'red'}} value={i} onClick={handleDeleteSchedule}>Delete</Button>: '' })\r\n      }\r\n\r\n      for (let i = 0; i < this.state.settingDevice.length ; i++){\r\n          deviceInSetting.push({...this.state.settingDevice[i], \r\n          time_start: <input type=\"datetime-local\" onChange={handleTimeStart} className={i} step={1}></input>, \r\n          time_end: <input type=\"datetime-local\" onChange={handleTimeEnd}  className={i} step={1} ></input>,\r\n          setting:  <Button value={i} onClick={handleSetSchedule}>Set</Button> }) \r\n      }\r\n\r\n      // console.log(this.state.scheduled[0])\r\n    const columns = [{\r\n        dataField: 'id',\r\n        text: 'ID'\r\n      }, {\r\n        dataField: 'id_device',\r\n        text: 'Device ID'\r\n      }, \r\n      {\r\n        dataField: 'time_start',\r\n        text: 'Time Start'\r\n      },\r\n      {\r\n        dataField: 'time_end',\r\n        text: 'Time End'\r\n      },\r\n      {\r\n        dataField: 'status',\r\n        text: 'Status'\r\n      },\r\n      {\r\n        dataField: 'setting',\r\n        text: 'Setting'\r\n      }\r\n      ];\r\n    \r\n    const columns2 = [{\r\n        dataField: 'id',\r\n        text: 'ID'\r\n      }, \r\n      {\r\n        dataField: 'name',\r\n        text: 'Device Name'\r\n      },\r\n      {\r\n        dataField: 'time_start',\r\n        text: 'Time Start'\r\n      },\r\n      {\r\n        dataField: 'time_end',\r\n        text: 'Time End'\r\n      },\r\n      {\r\n        dataField: 'setting',\r\n        text: 'Setting'\r\n      }\r\n      ];\r\n\r\n        return(\r\n            <div>\r\n                <div className='row'>\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"justify-content-between align-items-center tab-transparent\">\r\n                            <Tabs defaultActiveKey=\"table\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\r\n                            <Tab eventKey=\"table\" title=\"Schedule\">\r\n                            <div className=\"card\">\r\n                            <div className=\"card-body text-center\">\r\n                            <h5 className=\"mb-2 text-dark font-weight-normal\">Device Schedule</h5>\r\n                                <BootstrapTable keyField='id' data={ deviceInSchedule } columns={ columns } />\r\n                                </div>\r\n                            </div>\r\n                            </Tab>\r\n                            <Tab eventKey=\"setting\" title=\"Setting\">\r\n                            <div className=\"card\">\r\n                            <div className=\"card-body text-center\">\r\n                            <h5 className=\"mb-2 text-dark font-weight-normal\">Schedule Setting</h5>\r\n                                <BootstrapTable keyField='id' data={ deviceInSetting } columns={ columns2 } />\r\n                                </div>\r\n                            </div>\r\n\r\n                            </Tab>\r\n                            </Tabs>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimeSetting;"],"sourceRoot":""}